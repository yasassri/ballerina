import ballerina/http;
{{#paths}}{{#value}}{{#get}}
public function {{operationId}} (http:Request req{{#parameters}}{{>pathParams}}{{/parameters}}) returns http:Response {
    //stub code - fill as necessary
    http:Response resp = new;
    string payload = "Sample {{operationId}} Response";
    resp.setStringPayload(payload);

	return resp;
}
{{/get}}{{#post}}
public function {{operationId}} (http:Request req{{#parameters}}{{>pathParams}}{{/parameters}}) returns http:Response {
    //stub code - fill as necessary
    http:Response resp = new;
    string payload = "Sample {{operationId}} Response";
    resp.setStringPayload(payload);

	return resp;
}
{{/post}}{{#put}}
public function {{operationId}} (http:Request req{{#parameters}}{{>pathParams}}{{/parameters}}) returns http:Response {
    //stub code - fill as necessary
    http:Response resp = new;
    string payload = "Sample {{operationId}} Response";
    resp.setStringPayload(payload);

	return resp;
}
{{/put}}{{#delete}}
public function {{operationId}} (http:Request req{{#parameters}}{{>pathParams}}{{/parameters}}) returns http:Response {
    //stub code - fill as necessary
    http:Response resp = new;
    string payload = "Sample {{operationId}} Response";
    resp.setStringPayload(payload);

	return resp;
}
{{/delete}}{{#options}}
public function {{operationId}} (http:Request req{{#parameters}}{{>pathParams}}{{/parameters}}) returns http:Response {
    //stub code - fill as necessary
    http:Response resp = new;
    string payload = "Sample {{operationId}} Response";
    resp.setStringPayload(payload);

	return resp;
}
{{/options}}{{#head}}
public function {{operationId}} (http:Request req{{#parameters}}{{>pathParams}}{{/parameters}}) returns http:Response {
    //stub code - fill as necessary
    http:Response resp = new;
    string payload = "Sample {{operationId}} Response";
    resp.setStringPayload(payload);

	return resp;
}
{{/head}}{{#patch}}
    public function {{operationId}} (http:Request req{{#parameters}}{{>pathParams}}{{/parameters}}) returns http:Response {
        //stub code - fill as necessary
        http:Response resp = new;
        string payload = "Sample {{operationId}} Response";
        resp.setStringPayload(payload);

	return resp;
    }
{{/patch}}{{#trace}}
public function {{operationId}} (http:Request req{{#parameters}}{{>pathParams}}{{/parameters}}) returns http:Response {
    //stub code - fill as necessary
    http:Response resp = new;
    string payload = "Sample {{operationId}} Response";
    resp.setStringPayload(payload);

	return resp;
}
{{/trace}}{{/value}}{{/paths}}
